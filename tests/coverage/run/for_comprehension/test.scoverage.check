# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
Test
27
124
2
flatMap
Apply
false
0
false
for {\n    a <- List(1)\n    b <- List(2)\n  } yield  {\n    println(a)\n    println(b)\n    (a, b)\n  }

1
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
Test
42
49
3
apply
Apply
false
0
false
List(1)

2
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
Test
42
46
3
List
Ident
false
0
false
List

3
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
54
124
4
map
Apply
false
0
false
b <- List(2)\n  } yield  {\n    println(a)\n    println(b)\n    (a, b)\n  }

4
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
59
66
4
apply
Apply
false
0
false
List(2)

5
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
59
63
4
List
Ident
false
0
false
List

6
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
84
94
6
println
Apply
false
0
false
println(a)

7
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
84
91
6
println
Ident
false
0
false
println

8
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
92
93
6
a
Ident
false
0
false
a

9
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
99
109
7
println
Apply
false
0
false
println(b)

10
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
99
106
7
println
Ident
false
0
false
println

11
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
107
108
7
b
Ident
false
0
false
b

12
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
115
116
8
a
Ident
false
0
false
a

13
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
$anonfun
118
119
8
b
Ident
false
0
false
b

14
for_comprehension/test.scala
<empty>
test$package$
Object
<empty>.test$package$
Test
0
14
1
Test
DefDef
false
0
false
@main\ndef Test

